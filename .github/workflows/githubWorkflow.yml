name: "sfdx"

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install Salesforce CLI
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
          ./sfdx-cli/install
      - name: Auth with the DevHub
        run: 'sfdx force:auth:jwt:grant --clientid "3MVG9t0sl2P.pBypl07KvI.FUHkU1Hw6_7JdMUcR4O4vtd51XoD01z0JyibB.CUjGip1YlyEyHg.MK7GSgUNq" --jwtkeyfile  server3.key --username "meri.wa@gmail.com" -a ConnectedYAML -d'
      - name: Create scratch org
        run: "sfdx force:org:create  --setdefaultusername -f config/project-scratch-def.json -a my-scratch --setalias soenv"
      - name: Password generation
        run: "sfdx force:user:password:generate --targetusername soenv"
        # push source into scratch org
      - name: Push source
        run: "sfdx force:source:push -u soenv"
      - name: List orgs
        run: "sfdx force:org:list"
        # run tests
      - name: Run tests
        run: "sfdx force:apex:test:run -u soenv --resultformat human"
      - name: Get scratch Org URL
        id: out-cache
        run: echo ::set-output name=orgCreateResult::$(sfdx force:org:display --json -u soenv)
        # get URL and params of scratch org
      - name: Get Scratch URL
        id: params
        run: |
          echo ::set-output name=instanceURL::$(echo $orgCreateResult | jq -r .result.instanceUrl)
          echo ::set-output name=accessToken::$(echo $orgCreateResult | jq -r .result.accessToken)
          echo ::set-output name=parameters::'/secur/frontdoor.jsp?sid='
        env:
          orgCreateResult: ${{ steps.out-cache.outputs.orgCreateResult}}
      #comment Pull
      - name: comment on pull request
        uses: unsplash/comment-on-pr@master
        with:
          msg: ${{steps.params.outputs.instanceURL}}${{steps.params.outputs.parameters}}${{steps.params.outputs.accessToken}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      

